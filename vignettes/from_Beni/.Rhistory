knitr::opts_chunk$set(echo = TRUE)
library(ingestr)
library(rsofun)
knitr::opts_chunk$set(echo = TRUE)
devtools::load_all("D:/Github/ingestr/")
devtools::load_all("D:/Github/rsofun/")
devtools::load_all("D:/Github/rbeni/")
install.packages("ggthemes")
install.packages("yardstick")
install.packages("ncmeta")
devtools::load_all("D:/Github/rbeni/")
install.packages("vhs")
devtools::load_all("D:/Github/rbeni/")
devtools::load_all("D:/Github/rbeni/")
devtools::load_all("D:/Github/rbeni/")
install.packages("remotes")
install.packages("remotes")
remotes::install_github("cj-holmes/vhs")
devtools::load_all("D:/Github/rbeni/")
# install.packages("remotes")  #-->need to run when installing rbeni
# remotes::install_github("cj-holmes/vhs") #-->need to run when installing rbeni
devtools::load_all("D:/Github/ingestr/")
devtools::load_all("D:/Github/rsofun/")
devtools::load_all("D:/Github/rbeni/")
library(ingestr)
library(tidyverse)
library(tidyverse)
library(rsofun)
library(rbeni)
# install.packages("remotes")  #-->need to run when installing rbeni
# remotes::install_github("cj-holmes/vhs") #-->need to run when installing rbeni
suppressWarnings(
devtools::load_all("D:/Github/ingestr/"))
suppressWarnings(devtools::load_all("D:/Github/rsofun/"))
suppressWarnings(devtools::load_all("D:/Github/rbeni/"))
library(ingestr)
library(tidyverse)
library(rsofun)
library(rbeni)
devtools::load_all("D:/Github/rbeni/")
library(rbeni)
devtools::load_all("D:/Github/rbeni/")
library(ingestr)
library(tidyverse)
library(rsofun)
library(rbeni)
library(rbeni)
devtools::load_all("D:/Github/rbeni/")
library(ingestr)
library(tidyverse)
library(rsofun)
library(rbeni)
df_sites_modis_era <- read_rds("data/df_sites_modis_era.csv")
?setwd
setwd(dir="D:/Github/photocold/")
df_sites_modis_era <- read_rds("data/df_sites_modis_era.csv")
dir="D:/Github/photocold/"
df_sites_modis_era <- read_rds(paste0(dir,"data/df_sites_modis_era.csv"))
View(df_sites_modis_era)
settings_ingestr_fluxnet <- list(
dir_hh = "~/data/FLUXNET-2015_Tier1/20191024/HH/",
getswc = FALSE,
filter_ntdt = TRUE,
threshold_GPP = 0.8,
remove_neg = FALSE
)
filn <- "ddf_fluxnet_gpp.rds"
if (!file.exists(filn)){
ddf_fluxnet_gpp <- ingestr::ingest(
siteinfo = df_sites_modis_era,
source    = "fluxnet",
getvars = list(gpp = "GPP_NT_VUT_REF",
gpp_unc = "GPP_NT_VUT_SE"),
dir = "~/data/FLUXNET-2015_Tier1/20191024/DD/",
settings = settings_ingestr_fluxnet,
timescale = "d"
)
saveRDS(ddf_fluxnet_gpp, file = filn)
} else {
ddf_fluxnet_gpp <- read_rds(filn)
}
#add by YP:
setwd("D:/Github/photocold/data/")
if (!file.exists(filn)){
ddf_fluxnet_gpp <- ingestr::ingest(
siteinfo = df_sites_modis_era,
source    = "fluxnet",
getvars = list(gpp = "GPP_NT_VUT_REF",
gpp_unc = "GPP_NT_VUT_SE"),
dir = "~/data/FLUXNET-2015_Tier1/20191024/DD/",
settings = settings_ingestr_fluxnet,
timescale = "d"
)
saveRDS(ddf_fluxnet_gpp, file = filn)
} else {
ddf_fluxnet_gpp <- read_rds(filn)
}
file.exists()
?file.exists
paste0("D:/Github/photocold/data/",filn)
#add by YP:
ddf_fluxnet_gpp <- read_rds(paste0("D:/Github/photocold/data/",filn))
p_model_fluxnet_drivers <- read_rds(paste0("D:/Github/photocold/data/","data/p_model_fluxnet_drivers.rds"))
p_model_fluxnet_drivers <- read_rds(paste0("D:/Github/photocold/data/","p_model_fluxnet_drivers.rds"))
View(ddf_fluxnet_gpp)
View(ddf_fluxnet_gpp[[2]][[1]])
View(df_sites_modis_era)
settings <- list(
method      = "bayesiantools",
targetvars  = c("gpp"),
timescale   = list(targets_obs = "d"),
metric      = cost_rmse_fullstack,
dir_results = "./",
name        = "mlflx",
control = list(
sampler = "DEzs",
settings = list(
burnin = 1000,
iterations = 5000
)
),
par = list(
kphio = list(lower=0.04, upper=0.1, init = 0.05),
a = list(lower=0, upper=5, init = 3.5),
b = list(lower=1, upper=5, init=3.5),
tau = list(lower=0, upper=15, init=1),
shape = list(lower=0, upper=0.1, init=0)
)
)
pars <- suppressWarnings(
calib_sofun(
drivers = p_model_fluxnet_drivers,
obs = ddf_fluxnet_gpp,
settings = settings
)
)
View(df_sites_modis_era)
