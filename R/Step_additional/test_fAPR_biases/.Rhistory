geom_histogram(binwidth = 0.05,fill="white",
position="identity")
ggplot(df.plot, aes(x=fapar, col=fapar_source))+
geom_histogram(binwidth = 0.05,fill="white",
position="identity")+
# geom_histogram(aes(y=..density..), alpha=0.5,binwidth = 5,
#                position="identity")+
geom_vline(data=mu, aes(xintercept=fapar.mean, color=fapar_source),
linetype="dashed",size=1.2)
ggplot(df.plot, aes(x=fapar, fill=fapar_source))+
geom_histogram(binwidth = 0.05,col="white",
position="identity")+
# geom_histogram(aes(y=..density..), alpha=0.5,binwidth = 5,
#                position="identity")+
geom_vline(data=mu, aes(xintercept=fapar.mean, color=fapar_source),
linetype="dashed",size=1.2)
ggplot(df.plot, aes(x=fapar, fill=fapar_source))+
geom_histogram(binwidth = 0.05,col="white",
position="identity")+
# geom_histogram(aes(y=..density..), alpha=0.5,binwidth = 5,
#                position="identity")+
geom_vline(data=mu, aes(xintercept=fapar.mean, color=fapar_source),
linetype="dashed",size=1.2)+
scale_col_manual(values=c("fapar_itpl"="tomato",
"fapar_spl"="green3","fapar_act"="skyblue"))+
theme_minimal()
ggplot(df.plot, aes(x=fapar, fill=fapar_source))+
geom_histogram(binwidth = 0.05,col="white",
position="identity")+
# geom_histogram(aes(y=..density..), alpha=0.5,binwidth = 5,
#                position="identity")+
geom_vline(data=mu, aes(xintercept=fapar.mean, color=fapar_source),
linetype="dashed",size=1.2)+
scale_fill_manual(values=c("fapar_itpl"="tomato",
"fapar_spl"="green3","fapar_act"="skyblue"))+
theme_minimal()
mu
#adjust the modeled gpp-->only adjust the gpp_mod_FULL at the moment
df$gpp_mod_FULL_adj<-df$gpp_mod_FULL*df$fapar_act/df$fapar_spl
#save the plot
save.path<-"C:/Users/yluo/Desktop/R_testcode/PhotoCold/Second_round_of_code/plot/additional_test/test_fAPRA_biases/"
ggsave(p_hist,filename = paste0(save.path,"test_fPAR_distibution.png"))
#---------------------------------------------------
#Aim: to check if fAPAR overestimation results in the p-model overestimation
#(in the early spring ) in EC sites-->if not, it is kind of indicate other mechnism(e.g.photoprective) play a role
#---------------------------------------------------
#
#------------------------------
#(1)load the data (merge data from PhenoCam and EC sites)
#------------------------------
load.path<-"D:/CES/Data_for_use/Merge_Data/"
load(paste0(load.path,"Merged_Flux_and_PhenoCam_sel.RDA"))
#-------------------------------------------
#(2) Calculate the real fAPRA from EC sites and adjust the modeled gpp:
#-------------------------------------------
#calculating the real fAPR=1-ppfd_out/ppfd_ in EC sites
df<-df_merge_sel;
df$fapar_act<-1-c(df$ppfd_out_fluxnet2015/df$ppfd_in_fluxnet2015)
#keep the data when fapar_act are between 0-1:
df<-df[df$fapar_act>=0&df$fapar_act<=1,]
#plot for fAPAR
df_fAPAR<-df[,c("fapar_itpl","fapar_spl","fapar_act")]
df_fAPAR<-df_fAPAR[!is.na(df_fAPAR$fapar_itpl)&!is.na(df_fAPAR$fapar_spl)&!is.na(df_fAPAR$fapar_act),]
df.plot<-melt(df_fAPAR)
names(df.plot)<-c("fapar_source","fapar")
mu <- ddply(df.plot, "fapar_source", summarise, fapar.mean=mean(fapar))
p_hist<-ggplot(df.plot, aes(x=fapar, fill=fapar_source))+
geom_histogram(binwidth = 0.05,col="white",
position="identity")+
# geom_histogram(aes(y=..density..), alpha=0.5,binwidth = 5,
#                position="identity")+
geom_vline(data=mu, aes(xintercept=fapar.mean, color=fapar_source),
linetype="dashed",size=1.2)+
scale_fill_manual(values=c("fapar_itpl"="tomato",
"fapar_spl"="green3","fapar_act"="skyblue"))+
theme_minimal()
#save the plot
save.path<-"C:/Users/yluo/Desktop/R_testcode/PhotoCold/Second_round_of_code/plot/additional_test/test_fAPRA_biases/"
ggsave(p_hist,filename = paste0(save.path,"test_fPAR_distibution.png"))
#adjust the modeled gpp-->only adjust the gpp_mod_FULL at the moment
df$gpp_mod_FULL_adj<-df$gpp_mod_FULL*df$fapar_act/df$fapar_spl
#-------------------------------------------------------
#(3)comparing the difference regarding the gpp_obs,gpp_mod_FULL, and gpp_mod_FULL_adj
#------------------------------------------------------
#subset the df only the sites have the available fapar and !in.finite(gpp_full)
df_subset<-df[!is.na(df$fapar_spl)&!is.infinite(df$gpp_mod_FULL_adj)&!is.na(df$gpp_mod_FULL_adj),]
unique(df_subset$sitename)
#
df_gpp<-df_subset[,c("sitename","date","gpp_obs","gpp_mod_FULL","gpp_mod_FULL_adj","fluxnet_PFT")]
#remove:
#a. the gpp_mod_FULL_adj when equals Inf or -Inf
#a. when gpp_mod_FULL_adj < 0 -->can calculate the percentage <0 -->1-(44633)/51590=0.13
df_gpp<-df_gpp[!is.infinite(df_gpp$gpp_mod_FULL_adj),]
#do not only use the gpp data >0 as in many cases the gpp_obs <0 (close to 0)
df_gpp<-df_gpp[df_gpp$gpp_mod_FULL_adj>=c(-10),] #remove the gpp_mod_FULL_adj< -10
df_gpp<-df_gpp[df_gpp$gpp_mod_FULL>=c(-10),] #remove the gpp_mod_FULL<0 and gpp_obs< -10
df_gpp<-df_gpp[df_gpp$gpp_obs>=c(-10),] #remove the gpp_mod_FULL<0 and gpp_obs<0
#-------------------------------------------------------
#(3)comparing the difference regarding the gpp_obs,gpp_mod_FULL, and gpp_mod_FULL_adj
#------------------------------------------------------
#subset the df only the sites have the available fapar and !in.finite(gpp_full)
df_subset<-df[!is.na(df$fapar_spl)&!is.infinite(df$gpp_mod_FULL_adj)&!is.na(df$gpp_mod_FULL_adj),]
unique(df_subset$sitename)
#
df_gpp<-df_subset[,c("sitename","date","gpp_obs","gpp_mod_FULL","gpp_mod_FULL_adj","fluxnet_PFT")]
#remove:
#a. the gpp_mod_FULL_adj when equals Inf or -Inf
#a. when gpp_mod_FULL_adj < 0 -->can calculate the percentage <0 -->1-(44633)/51590=0.13
df_gpp<-df_gpp[!is.infinite(df_gpp$gpp_mod_FULL_adj),]
#do not only use the gpp data >0 as in many cases the gpp_obs <0 (close to 0)
df_gpp<-df_gpp[df_gpp$gpp_mod_FULL_adj>=c(-10),] #remove the gpp_mod_FULL_adj< -10
df_gpp<-df_gpp[df_gpp$gpp_mod_FULL>=c(-10),] #remove the gpp_mod_FULL<0 and gpp_obs< -10
df_gpp<-df_gpp[df_gpp$gpp_obs>=c(-10),] #remove the gpp_mod_FULL<0 and gpp_obs<0
#remove the NA values
df_gpp<-df_gpp[!is.na(df_gpp$sitename),]
unique(df_gpp$sitename)
library(reshape2)
df_gpp_tidy<-melt(df_gpp,id.vars = c("sitename","date","fluxnet_PFT"))
names(df_gpp_tidy)<-c("sitename","date","fluxnet_PFT","gpp_category","gpp_value")
#------------------
#a.general plot
#------------------
library(ggplot2)
library(ggpubr)  #add the linear regression equation and stats automatically in ggplot2
#ref:https://rpkgs.datanovia.com/ggpubr/reference/stat_regline_equation.html(not use in this plot at the moment)
#linear regression:
lm_gpp_full<-lm(gpp_mod_FULL~gpp_obs,data=df_gpp)
coef_lm1<-coef(lm_gpp_full);stats_lm1<-summary(lm_gpp_full)
lm_gpp_full_adj<-lm(gpp_mod_FULL_adj~gpp_obs,data=df_gpp)
coef_lm2<-coef(lm_gpp_full_adj);stats_lm2<-summary(lm_gpp_full_adj)
p_general<-ggplot()+
geom_point(data = df_gpp,aes(x=gpp_obs,y=gpp_mod_FULL,col="gpp_mod"))+
geom_point(data = df_gpp,aes(x=gpp_obs,y=gpp_mod_FULL_adj,col="gpp_mod_adj"))+
scale_color_manual("",values =  c("gpp_mod"=adjustcolor("tomato",0.3),"gpp_mod_adj"=adjustcolor("steelblue2",0.3)))+
geom_abline(intercept = coef_lm1[1],slope=coef_lm1[2],col="red",lwd=1.2)+
geom_abline(intercept = coef_lm2[1],slope=coef_lm2[2],col="blue",lwd=1.2)+
geom_abline(intercept = 0,slope=1,lwd=1.2,lty=2)+
xlab("gpp_obs (umol m-2 s-1)")+
ylab("gpp_mod (umol m-2 s-1)")+
theme_light()+
annotate(geom = "text",x=5,y=25,label=expression("y = 0.82 + 0.70x  p-value <0.001 R"^2*" = 0.70"),col="red")+
annotate(geom = "text",x=5,y=23,label=expression("y = 2.38 + 0.81x  p-value <0.001 R"^2*" = 0.50"),col="blue")+
annotate(geom = "text",x=15,y=25,label="All -> All DOYs",size=12)
p_general
coef_lm1
coef_lm2
summary(lm_gpp_full)
summary(lm_gpp_full_adj)
p_general<-ggplot()+
geom_point(data = df_gpp,aes(x=gpp_obs,y=gpp_mod_FULL,col="gpp_mod"))+
geom_point(data = df_gpp,aes(x=gpp_obs,y=gpp_mod_FULL_adj,col="gpp_mod_adj"))+
scale_color_manual("",values =  c("gpp_mod"=adjustcolor("tomato",0.3),"gpp_mod_adj"=adjustcolor("steelblue2",0.3)))+
geom_abline(intercept = coef_lm1[1],slope=coef_lm1[2],col="red",lwd=1.2)+
geom_abline(intercept = coef_lm2[1],slope=coef_lm2[2],col="blue",lwd=1.2)+
geom_abline(intercept = 0,slope=1,lwd=1.2,lty=2)+
xlab("gpp_obs (umol m-2 s-1)")+
ylab("gpp_mod (umol m-2 s-1)")+
theme_light()+
annotate(geom = "text",x=2,y=25,label=expression("y = 0.83 + 0.70x  p-value <0.001 R"^2*" = 0.70"),col="red")+
annotate(geom = "text",x=2,y=23,label=expression("y = 2.41 + 0.81x  p-value <0.001 R"^2*" = 0.50"),col="blue")+
annotate(geom = "text",x=15,y=25,label="All -> All DOYs",size=10)
print(p_general)
#save the plot
save.path<-"C:/Users/yluo/Desktop/R_testcode/PhotoCold/Second_round_of_code/plot/additional_test/test_fAPRA_biases/"
ggsave(p_general,filename = paste0(save.path,"test_fPAR_biases.png"))
df<-df_gpp
PFT<-"EBF"
#
df_sel<-df[df$fluxnet_PFT==PFT,]
#linear regressions:
lm_gpp_full<-lm(gpp_mod_FULL~gpp_obs,data=df_sel)
df<-df_gpp
PFT<-"DBF"
#
df_sel<-df[df$fluxnet_PFT==PFT,]
#linear regressions:
lm_gpp_full<-lm(gpp_mod_FULL~gpp_obs,data=df_sel)
coef_lm1<-coef(lm_gpp_full);stats_lm1<-summary(lm_gpp_full)
lm_gpp_full_adj<-lm(gpp_mod_FULL_adj~gpp_obs,data=df_sel)
coef_lm2<-coef(lm_gpp_full_adj);stats_lm2<-summary(lm_gpp_full_adj)
coef_lm1
coef_lm2
summary(lm_gpp_full)
summary(lm_gpp_full_adj)
df<-df_gpp
PFT<-"ENF"
#
df_sel<-df[df$fluxnet_PFT==PFT,]
#linear regressions:
lm_gpp_full<-lm(gpp_mod_FULL~gpp_obs,data=df_sel)
coef_lm1<-coef(lm_gpp_full);stats_lm1<-summary(lm_gpp_full)
lm_gpp_full_adj<-lm(gpp_mod_FULL_adj~gpp_obs,data=df_sel)
coef_lm2<-coef(lm_gpp_full_adj);stats_lm2<-summary(lm_gpp_full_adj)
coef_lm1
coef_lm2
summary(lm_gpp_full)
summary(lm_gpp_full_adj)
df<-df_gpp
PFT<-"GRA"
#
df_sel<-df[df$fluxnet_PFT==PFT,]
#linear regressions:
lm_gpp_full<-lm(gpp_mod_FULL~gpp_obs,data=df_sel)
coef_lm1<-coef(lm_gpp_full);stats_lm1<-summary(lm_gpp_full)
lm_gpp_full_adj<-lm(gpp_mod_FULL_adj~gpp_obs,data=df_sel)
coef_lm2<-coef(lm_gpp_full_adj);stats_lm2<-summary(lm_gpp_full_adj)
coef_lm1
coef_lm2
summary(lm_gpp_full)
summary(lm_gpp_full_adj)
#----------
#(b) for different PFTs:DBF, ENF, and GRA
#----------
plot_fun<-function(df,PFT){
# df<-df_gpp
# PFT<-"GRA"
#
df_sel<-df[df$fluxnet_PFT==PFT,]
#linear regressions:
lm_gpp_full<-lm(gpp_mod_FULL~gpp_obs,data=df_sel)
coef_lm1<-coef(lm_gpp_full);stats_lm1<-summary(lm_gpp_full)
lm_gpp_full_adj<-lm(gpp_mod_FULL_adj~gpp_obs,data=df_sel)
coef_lm2<-coef(lm_gpp_full_adj);stats_lm2<-summary(lm_gpp_full_adj)
#plotting
p_plot<-ggplot()+
geom_point(data = df_sel,aes(x=gpp_obs,y=gpp_mod_FULL,col="gpp_mod"))+
geom_point(data = df_sel,aes(x=gpp_obs,y=gpp_mod_FULL_adj,col="gpp_mod_adj"))+
scale_color_manual("",values =  c("gpp_mod"=adjustcolor("tomato",0.3),"gpp_mod_adj"=adjustcolor("steelblue2",0.3)))+
geom_abline(intercept = coef_lm1[1],slope=coef_lm1[2],col="red",lwd=1.2)+
geom_abline(intercept = coef_lm2[1],slope=coef_lm2[2],col="blue",lwd=1.2)+
geom_abline(intercept = 0,slope=1,lwd=1.2,lty=2)+
xlab("gpp_obs (umol m-2 s-1)")+
ylab("gpp_mod (umol m-2 s-1)")+
theme_light()+
theme(legend.position = c(0.8,0.2),
legend.text = element_text(size=14))
return(p_plot)
}
#!!!!need to add the PFT name in plot-->add later
#for DBF
p_DBF<-plot_fun(df_gpp,"DBF")
p_DBF<-p_DBF+
annotate(geom = "text",x=18,y=25,label="DBF",size=12)+
annotate(geom = "text",x=6,y=25,label=expression("y = 1.11 + 0.69x  p-value <0.001 R"^2*" = 0.72"),col="red")+
annotate(geom = "text",x=6,y=23,label=expression("y = 2.82 + 0.68x  p-value <0.001 R"^2*" = 0.54"),col="blue")
#for ENF
p_ENF<-plot_fun(df_gpp,"ENF")
p_ENF<-p_ENF+
annotate(geom = "text",x=18,y=25,label="ENF",size=12)+
annotate(geom = "text",x=6,y=25,label=expression("y = 0.63 + 0.77x  p-value <0.001 R"^2*" = 0.72"),col="red")+
annotate(geom = "text",x=6,y=23,label=expression("y = 2.00 + 0.97x  p-value <0.001 R"^2*" = 0.53"),col="blue")
#for GRA
p_GRA<-plot_fun(df_gpp,"GRA")
p_GRA<-p_GRA+
annotate(geom = "text",x=18,y=25,label="GRA",size=12)+
annotate(geom = "text",x=6,y=25,label=expression("y = 1.13 + 0.55x  p-value <0.001 R"^2*" = 0.66"),col="red")+
annotate(geom = "text",x=6,y=23,label=expression("y = 2.98 + 0.57x  p-value <0.001 R"^2*" = 0.46"),col="blue")
#merge different PFTs
library(cowplot)
p_merge<-plot_grid(p_GRA,p_DBF,p_ENF,
labels = "auto",ncol=3,label_size = 12,align = "hv")
p_DBF<-p_DBF+
annotate(geom = "text",x=18,y=25,label="DBF",size=10)+
annotate(geom = "text",x=6,y=25,label=expression("y = 1.11 + 0.69x  p-value <0.001 R"^2*" = 0.72"),col="red")+
annotate(geom = "text",x=6,y=23,label=expression("y = 2.82 + 0.68x  p-value <0.001 R"^2*" = 0.54"),col="blue")
#for ENF
p_ENF<-plot_fun(df_gpp,"ENF")
p_ENF<-p_ENF+
annotate(geom = "text",x=18,y=25,label="ENF",size=10)+
annotate(geom = "text",x=6,y=25,label=expression("y = 0.63 + 0.77x  p-value <0.001 R"^2*" = 0.72"),col="red")+
annotate(geom = "text",x=6,y=23,label=expression("y = 2.00 + 0.97x  p-value <0.001 R"^2*" = 0.53"),col="blue")
#for GRA
p_GRA<-plot_fun(df_gpp,"GRA")
p_GRA<-p_GRA+
annotate(geom = "text",x=18,y=25,label="GRA",size=10)+
annotate(geom = "text",x=6,y=25,label=expression("y = 1.13 + 0.55x  p-value <0.001 R"^2*" = 0.66"),col="red")+
annotate(geom = "text",x=6,y=23,label=expression("y = 2.98 + 0.57x  p-value <0.001 R"^2*" = 0.46"),col="blue")
#merge different PFTs
library(cowplot)
p_merge<-plot_grid(p_GRA,p_DBF,p_ENF,
labels = "auto",ncol=3,label_size = 12,align = "hv")
#----------
#(b) for different PFTs:DBF, ENF, and GRA
#----------
plot_fun<-function(df,PFT){
# df<-df_gpp
# PFT<-"GRA"
#
df_sel<-df[df$fluxnet_PFT==PFT,]
#linear regressions:
lm_gpp_full<-lm(gpp_mod_FULL~gpp_obs,data=df_sel)
coef_lm1<-coef(lm_gpp_full);stats_lm1<-summary(lm_gpp_full)
lm_gpp_full_adj<-lm(gpp_mod_FULL_adj~gpp_obs,data=df_sel)
coef_lm2<-coef(lm_gpp_full_adj);stats_lm2<-summary(lm_gpp_full_adj)
#plotting
p_plot<-ggplot()+
geom_point(data = df_sel,aes(x=gpp_obs,y=gpp_mod_FULL,col="gpp_mod"))+
geom_point(data = df_sel,aes(x=gpp_obs,y=gpp_mod_FULL_adj,col="gpp_mod_adj"))+
scale_color_manual("",values =  c("gpp_mod"=adjustcolor("tomato",0.3),"gpp_mod_adj"=adjustcolor("steelblue2",0.3)))+
geom_abline(intercept = coef_lm1[1],slope=coef_lm1[2],col="red",lwd=1.2)+
geom_abline(intercept = coef_lm2[1],slope=coef_lm2[2],col="blue",lwd=1.2)+
geom_abline(intercept = 0,slope=1,lwd=1.2,lty=2)+
xlab("gpp_obs (umol m-2 s-1)")+
ylab("gpp_mod (umol m-2 s-1)")+
theme_light()+
theme(legend.position = c(0.8,0.2),
legend.text = element_text(size=14))
return(p_plot)
}
#!!!!need to add the PFT name in plot-->add later
#for DBF
p_DBF<-plot_fun(df_gpp,"DBF")
p_DBF<-p_DBF+
annotate(geom = "text",x=18,y=25,label="DBF",size=10)+
annotate(geom = "text",x=6,y=25,label=expression("y = 1.11 + 0.69x  p-value <0.001 R"^2*" = 0.72"),col="red")+
annotate(geom = "text",x=6,y=23,label=expression("y = 2.82 + 0.68x  p-value <0.001 R"^2*" = 0.54"),col="blue")
#for ENF
p_ENF<-plot_fun(df_gpp,"ENF")
p_ENF<-p_ENF+
annotate(geom = "text",x=18,y=25,label="ENF",size=10)+
annotate(geom = "text",x=6,y=25,label=expression("y = 0.63 + 0.77x  p-value <0.001 R"^2*" = 0.72"),col="red")+
annotate(geom = "text",x=6,y=23,label=expression("y = 2.00 + 0.97x  p-value <0.001 R"^2*" = 0.53"),col="blue")
#for GRA
p_GRA<-plot_fun(df_gpp,"GRA")
p_GRA<-p_GRA+
annotate(geom = "text",x=18,y=25,label="GRA",size=10)+
annotate(geom = "text",x=6,y=25,label=expression("y = 1.13 + 0.55x  p-value <0.001 R"^2*" = 0.66"),col="red")+
annotate(geom = "text",x=6,y=23,label=expression("y = 2.98 + 0.57x  p-value <0.001 R"^2*" = 0.46"),col="blue")
#merge different PFTs
library(cowplot)
p_merge<-plot_grid(p_GRA,p_DBF,p_ENF,
labels = "auto",ncol=3,label_size = 12,align = "hv")
p_merge
#
ggsave(p_merge,filename = paste0(save.path,"test_fPAR_biases_diffPFTs.png"),width = 18,height = 10)
ggplot()+
geom_point(data = df_gpp,aes(x=gpp_obs,y=gpp_mod_FULL,col=sitename,shape="gpp_mod"),size=0.6)+
geom_point(data = df_gpp,aes(x=gpp_obs,y=gpp_mod_FULL_adj,col=sitename,shape="gpp_mod_adj"),size=0.6)+
geom_smooth(data = df_gpp,aes(x=gpp_obs,y=gpp_mod_FULL,col=sitename),method = "lm",
formula = y ~ x ,se=FALSE,size=1.2,lty=1)+
geom_smooth(data = df_gpp,aes(x=gpp_obs,y=gpp_mod_FULL_adj,col=sitename),method = "lm",
formula = y ~ x ,se=FALSE,size=2,lty=2)+
geom_abline(intercept = 0,slope=1,lwd=1.2,lty=2)+
xlab("gpp_obs (umol m-2 s-1)")+
ylab("gpp_mod (umol m-2 s-1)")+
theme_light()+
annotate(geom = "text",x=15,y=25,label="All DOYs",size=8)
#-------------------------------------------------------
#(5)#for overestimation period in early spring time:
#------------------------------------------------------
library(plyr)
library(lubridate)
df_gpp$Year<-year(df_gpp$date)
site_year_overest<-ddply(df_gpp,.(sitename,Year),summarize,datapoints=length(gpp_obs))
unique(df_gpp$sitename)
#-------------------------------------------------------
#(4)for each sites plot
#------------------------------------------------------
p_gpp<-ggplot()+
geom_point(data = df_gpp,aes(x=gpp_obs,y=gpp_mod_FULL,col=sitename,shape="gpp_mod"),size=0.6)+
geom_point(data = df_gpp,aes(x=gpp_obs,y=gpp_mod_FULL_adj,col=sitename,shape="gpp_mod_adj"),size=0.6)+
geom_smooth(data = df_gpp,aes(x=gpp_obs,y=gpp_mod_FULL,col=sitename),method = "lm",
formula = y ~ x ,se=FALSE,size=1.2,lty=1)+
geom_smooth(data = df_gpp,aes(x=gpp_obs,y=gpp_mod_FULL_adj,col=sitename),method = "lm",
formula = y ~ x ,se=FALSE,size=2,lty=2)+
geom_abline(intercept = 0,slope=1,lwd=1.2,lty=2)+
xlab("gpp_obs (umol m-2 s-1)")+
ylab("gpp_mod (umol m-2 s-1)")+
theme_light()+
annotate(geom = "text",x=15,y=25,label="All DOYs",size=8)
#-------------------------------------------------------
#(5)#for overestimation period in early spring time:
#------------------------------------------------------
library(plyr)
library(lubridate)
df_gpp$Year<-year(df_gpp$date)
site_year_overest<-ddply(df_gpp,.(sitename,Year),summarize,datapoints=length(gpp_obs))
#load the GPP overestimation site year information from previous analysis:
load(paste0("D:/CES/Data_for_use/event_length/","df_events_length.RDA"))
#
sel_siteyear<-c()
for(i in 1:nrow(site_year_overest)){
t<-subset(df_events_all,sitename==site_year_overest[i,"sitename"] & Year==site_year_overest[i,"Year"])
sel_siteyear<-rbind(sel_siteyear,t)
rm(t)
}
#
df_gpp$doy<-as.numeric(format(df_gpp$date,"%j"))
df_gpp_sel<-c()
for(i in 1:nrow(sel_siteyear)){
#
df_temp<-subset(df_gpp,df_gpp$sitename==sel_siteyear$sitename[i]&df_gpp$Year==sel_siteyear$Year[i])
df_temp<-df_temp[c(df_temp$doy>=sel_siteyear$Over_start & df_temp$doy<=sel_siteyear$Over_end),]
df_gpp_sel<-rbind(df_gpp_sel,df_temp)
}
#rm the NA rows
df_gpp_sel<-df_gpp_sel[!is.na(df_gpp_sel$sitename),]
#
lm_gpp_full<-lm(gpp_mod_FULL~gpp_obs,data=df_gpp_sel)
coef_lm1<-coef(lm_gpp_full);stats_lm1<-summary(lm_gpp_full)
lm_gpp_full_adj<-lm(gpp_mod_FULL_adj~gpp_obs,data=df_gpp_sel)
coef_lm2<-coef(lm_gpp_full_adj);stats_lm2<-summary(lm_gpp_full_adj)
ggplot()+
geom_point(data = df_gpp_sel,aes(x=gpp_obs,y=gpp_mod_FULL,col="gpp_mod"))+
geom_point(data = df_gpp_sel,aes(x=gpp_obs,y=gpp_mod_FULL_adj,col="gpp_mod_adj"))+
scale_color_manual("",values =  c("gpp_mod"=adjustcolor("tomato",0.3),"gpp_mod_adj"=adjustcolor("steelblue2",0.3)))+
geom_abline(intercept = coef_lm1[1],slope=coef_lm1[2],col="red",lwd=1.2)+
geom_abline(intercept = coef_lm2[1],slope=coef_lm2[2],col="blue",lwd=1.2)+
geom_abline(intercept = 0,slope=1,lwd=1.2,lty=2)+
xlab("gpp_obs (umol m-2 s-1)")+
ylab("gpp_mod (umol m-2 s-1)")+
theme_light()+
annotate(geom = "text",x=5,y=25,label=expression("y = 1.69 + 0.59x  p-value <0.001 R"^2*" = 0.53"),col="red")+
annotate(geom = "text",x=5,y=23,label=expression("y = 4.90 + 0.62x  p-value <0.001 R"^2*" = 0.25"),col="blue")+
annotate(geom = "text",x=15,y=25,label="All -> event DOYs",size=12)
coef_lm1
coef_lm2
summary(lm_gpp_full)
summary(lm_gpp_full_adj)
ggplot()+
geom_point(data = df_gpp_sel,aes(x=gpp_obs,y=gpp_mod_FULL,col=sitename,shape="gpp_mod"),size=0.6)+
geom_point(data = df_gpp_sel,aes(x=gpp_obs,y=gpp_mod_FULL_adj,col=sitename,shape="gpp_mod_adj"),size=0.6)+
geom_smooth(data = df_gpp_sel,aes(x=gpp_obs,y=gpp_mod_FULL,col=sitename),method = "lm",
formula = y ~ x ,se=FALSE,size=1.2,lty=1)+
geom_smooth(data = df_gpp,aes(x=gpp_obs,y=gpp_mod_FULL_adj,col=sitename),method = "lm",
formula = y ~ x ,se=FALSE,size=2,lty=2)+
geom_abline(intercept = 0,slope=1,lwd=1.2,lty=2)+
xlab("gpp_obs (umol m-2 s-1)")+
ylab("gpp_mod (umol m-2 s-1)")+
theme_light()+
annotate(geom = "text",x=15,y=25,label="event DOYs",size=8)
p_merge_PFTs<-plot_grid(p_gpp,p_gpp_diffsites,
labels = "auto",ncol=2,label_size = 12,align = "hv")
ggplot()+
geom_point(data = df_gpp_sel,aes(x=gpp_obs,y=gpp_mod_FULL,col=sitename,shape="gpp_mod"),size=0.6)+
geom_point(data = df_gpp_sel,aes(x=gpp_obs,y=gpp_mod_FULL_adj,col=sitename,shape="gpp_mod_adj"),size=0.6)+
geom_smooth(data = df_gpp_sel,aes(x=gpp_obs,y=gpp_mod_FULL,col=sitename),method = "lm",
formula = y ~ x ,se=FALSE,size=1.2,lty=1)+
geom_smooth(data = df_gpp,aes(x=gpp_obs,y=gpp_mod_FULL_adj,col=sitename),method = "lm",
formula = y ~ x ,se=FALSE,size=2,lty=2)+
geom_abline(intercept = 0,slope=1,lwd=1.2,lty=2)+
xlab("gpp_obs (umol m-2 s-1)")+
ylab("gpp_mod (umol m-2 s-1)")+
theme_light()
ggplot()+
geom_point(data = df_gpp_sel,aes(x=gpp_obs,y=gpp_mod_FULL,col=sitename,shape="gpp_mod"),size=0.6)+
geom_point(data = df_gpp_sel,aes(x=gpp_obs,y=gpp_mod_FULL_adj,col=sitename,shape="gpp_mod_adj"),size=0.6)+
geom_smooth(data = df_gpp_sel,aes(x=gpp_obs,y=gpp_mod_FULL,col=sitename),method = "lm",
formula = y ~ x ,se=FALSE,size=1.2,lty=1)+
geom_smooth(data = df_gpp_sel,aes(x=gpp_obs,y=gpp_mod_FULL_adj,col=sitename),method = "lm",
formula = y ~ x ,se=FALSE,size=2,lty=2)+
geom_abline(intercept = 0,slope=1,lwd=1.2,lty=2)+
xlab("gpp_obs (umol m-2 s-1)")+
ylab("gpp_mod (umol m-2 s-1)")+
theme_light()+
annotate(geom = "text",x=15,y=25,label="event DOYs",size=8)
p_merge_PFTs<-plot_grid(p_gpp,p_gpp_diffsites,
labels = "auto",ncol=2,label_size = 12,align = "hv")
#-------------------------------------------------------
#(4)for each sites plot
#------------------------------------------------------
p_gpp<-ggplot()+
geom_point(data = df_gpp,aes(x=gpp_obs,y=gpp_mod_FULL,col=sitename,shape="gpp_mod"),size=0.6)+
geom_point(data = df_gpp,aes(x=gpp_obs,y=gpp_mod_FULL_adj,col=sitename,shape="gpp_mod_adj"),size=0.6)+
geom_smooth(data = df_gpp,aes(x=gpp_obs,y=gpp_mod_FULL,col=sitename),method = "lm",
formula = y ~ x ,se=FALSE,size=1.2,lty=1)+
geom_smooth(data = df_gpp,aes(x=gpp_obs,y=gpp_mod_FULL_adj,col=sitename),method = "lm",
formula = y ~ x ,se=FALSE,size=2,lty=2)+
geom_abline(intercept = 0,slope=1,lwd=1.2,lty=2)+
xlab("gpp_obs (umol m-2 s-1)")+
ylab("gpp_mod (umol m-2 s-1)")+
theme_light()+
annotate(geom = "text",x=15,y=25,label="All DOYs",size=8)
p_merge_PFTs<-plot_grid(p_gpp,p_gpp_diffsites,
labels = "auto",ncol=2,label_size = 12,align = "hv")
###
p_gpp_diffsites<-ggplot()+
geom_point(data = df_gpp_sel,aes(x=gpp_obs,y=gpp_mod_FULL,col=sitename,shape="gpp_mod"),size=0.6)+
geom_point(data = df_gpp_sel,aes(x=gpp_obs,y=gpp_mod_FULL_adj,col=sitename,shape="gpp_mod_adj"),size=0.6)+
geom_smooth(data = df_gpp_sel,aes(x=gpp_obs,y=gpp_mod_FULL,col=sitename),method = "lm",
formula = y ~ x ,se=FALSE,size=1.2,lty=1)+
geom_smooth(data = df_gpp_sel,aes(x=gpp_obs,y=gpp_mod_FULL_adj,col=sitename),method = "lm",
formula = y ~ x ,se=FALSE,size=2,lty=2)+
geom_abline(intercept = 0,slope=1,lwd=1.2,lty=2)+
xlab("gpp_obs (umol m-2 s-1)")+
ylab("gpp_mod (umol m-2 s-1)")+
theme_light()+
annotate(geom = "text",x=15,y=25,label="event DOYs",size=8)
p_merge_PFTs<-plot_grid(p_gpp,p_gpp_diffsites,
labels = "auto",ncol=2,label_size = 12,align = "hv")
p_merge_PFTs
ggsave(p_merge_PFTs,filename = paste0(save.path,"test_fPAR_biases_eventdays_diffPFTs.png"),width = 18,height = 8)
#
p_general_sel<-ggplot()+
geom_point(data = df_gpp_sel,aes(x=gpp_obs,y=gpp_mod_FULL,col="gpp_mod"))+
geom_point(data = df_gpp_sel,aes(x=gpp_obs,y=gpp_mod_FULL_adj,col="gpp_mod_adj"))+
scale_color_manual("",values =  c("gpp_mod"=adjustcolor("tomato",0.3),"gpp_mod_adj"=adjustcolor("steelblue2",0.3)))+
geom_abline(intercept = coef_lm1[1],slope=coef_lm1[2],col="red",lwd=1.2)+
geom_abline(intercept = coef_lm2[1],slope=coef_lm2[2],col="blue",lwd=1.2)+
geom_abline(intercept = 0,slope=1,lwd=1.2,lty=2)+
xlab("gpp_obs (umol m-2 s-1)")+
ylab("gpp_mod (umol m-2 s-1)")+
theme_light()+
annotate(geom = "text",x=5,y=25,label=expression("y = 1.28 + 0.67x  p-value <0.001 R"^2*" = 0.60"),col="red")+
annotate(geom = "text",x=5,y=23,label=expression("y = 4.06 + 0.74x  p-value <0.001 R"^2*" = 0.28"),col="blue")+
annotate(geom = "text",x=15,y=25,label="All -> event DOYs",size=10)
#save the plot
save.path<-"C:/Users/yluo/Desktop/R_testcode/PhotoCold/Second_round_of_code/plot/additional_test/test_fAPRA_biases/"
ggsave(p_general_sel,filename = paste0(save.path,"test_fPAR_biases_eventdays.png"))
#save the plot
save.path<-"C:/Users/yluo/Desktop/R_testcode/PhotoCold/Second_round_of_code/plot/additional_test/test_fAPRA_biases/"
ggsave(p_general_sel,filename = paste0(save.path,"test_fPAR_biases_eventdays.png"))
